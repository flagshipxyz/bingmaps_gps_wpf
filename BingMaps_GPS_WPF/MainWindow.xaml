<mui:ModernWindow x:Class="BingMaps_GPS_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        mc:Ignorable="d ignore"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:extended="clr-namespace:GridTest.Extended"
        xmlns:vm="clr-namespace:BingMaps_GPS_WPF.ViewModel"
        xmlns:mui="http://firstfloorsoftware.com/ModernUI"
        Style="{StaticResource BlankWindow}"
        Height="600"
        Width="1000"
        Title="BingMaps+GPS"
        x:Name="mainWindow"
        WindowStartupLocation="CenterScreen"
        DataContext="{Binding Main, Source={StaticResource Locator}}">
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="PinTemplate">
                <m:Pushpin m:MapLayer.Position="{Binding Location }" Tag="{Binding}" />
            </DataTemplate>

            <ContextMenu x:Key="commonContextMenu" >
                <MenuItem Header="Clear AllPin" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Command_ClearPin}" >
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="Show Status" IsChecked="{Binding StatusVisible}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Command_ChangeStatusVisible}" >
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="Show LogPanel" IsChecked="{Binding LogPanelVisible}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding Command_ChangeLogPanelVisible}" >
                            </i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </ContextMenu>

            <ControlTemplate x:Key="ValidationTemplate">
                <StackPanel>
                    <AdornedElementPlaceholder x:Name="adornedelem" />
                    <ItemsControl ItemsSource="{Binding AdornedElement.(Validation.Errors), ElementName=adornedelem}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Red" Text="{Binding ErrorContent}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ControlTemplate>

            <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}">
                <Setter Property="Validation.ErrorTemplate" 
                   Value="{StaticResource ValidationTemplate}"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <Binding RelativeSource="{RelativeSource Self}"
                                    Path="(Validation.Errors)[0].ErrorContent"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <!--<i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Command_Closed}" >
            </i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>-->

    <DockPanel LastChildFill="True" >
        <Grid DockPanel.Dock="Top" Height="30" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="110" />
                <ColumnDefinition Width="110" />
                <ColumnDefinition />
                <ColumnDefinition Width="110" />
                <ColumnDefinition Width="110" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="28"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            
            <Button Grid.Column="0" Content="Get Position" x:Name="button_GetPosition">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Command_GetPosition}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <ToggleButton Grid.Column="1" Content="{Binding GPSLoggingButtonText}" IsChecked="{Binding GPSLogging}">
            </ToggleButton>

            <Button Grid.Column="3" Content="Log" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding Command_OpenLogFile}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <ToggleButton Grid.Column="4" Content="Setting" IsChecked="{Binding SettingPanelVisible}">
            </ToggleButton>
        </Grid>
        
        <Grid DockPanel.Dock="Bottom" Visibility="{Binding StatusVisibility}">
            <StackPanel Orientation="Horizontal">
                <Label VerticalAlignment="Center" >Time:</Label>
                <Border BorderThickness="2"></Border>
                <Label VerticalAlignment="Center" 
                       Content="{Binding CurrentPin.GeoPosition.Timestamp}" />

                <Border BorderThickness="2"></Border>
                <Label VerticalAlignment="Center" >Latitude:</Label>
                <Border BorderThickness="2"></Border>
                <Label VerticalAlignment="Center" 
                       Content="{Binding CurrentPin.GeoPosition.Location.Latitude}" />

                <Border BorderThickness="4"></Border>
                <Label VerticalAlignment="Center" >Longitude:</Label>
                <Border BorderThickness="2"></Border>
                <Label VerticalAlignment="Center" 
                       Content="{Binding CurrentPin.GeoPosition.Location.Longitude}" />

                <Border BorderThickness="4"></Border>
                <Label VerticalAlignment="Center" >Altitude:</Label>
                <Border BorderThickness="2"></Border>
                <Label VerticalAlignment="Center" 
                       Content="{Binding CurrentPin.GeoPosition.Location.Altitude}" />

                <Border BorderThickness="4"></Border>
                <Label VerticalAlignment="Center" >PinCount:</Label>
                <Border BorderThickness="2"></Border>
                <Label VerticalAlignment="Center" 
                       Content="{Binding Pins.Count}" />
            </StackPanel>
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <extended:ColumnDefinitionExtended Visible="{Binding LogPanelVisible, Mode=OneWay}" Width="{Binding LogPanelWidth,Mode=TwoWay}"/>
                <extended:ColumnDefinitionExtended Visible="{Binding LogPanelVisible, Mode=OneWay}" Width="Auto"/>
                <ColumnDefinition/>
                <extended:ColumnDefinitionExtended Visible="{Binding SettingPanelVisible, Mode=OneWay}" Width="Auto"/>
                <extended:ColumnDefinitionExtended Visible="{Binding SettingPanelVisible, Mode=OneWay}" Width="{Binding SettingPanelWidth,Mode=TwoWay}"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" x:Name="panel_log" >
                <ListBox x:Name="listBox_log" ItemsSource="{Binding LogList}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <cmd:EventToCommand Command="{Binding Command_LogListBox_SelectionChanged}"
                                    PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>

            <GridSplitter Grid.Column="1" Width="10" BorderThickness="1"
                  Background="DarkGray" 
                  VerticalAlignment="Stretch" HorizontalAlignment="Center" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Command_HideLogPanel}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </GridSplitter>

            <m:Map Grid.Column="2" x:Name="map" ZoomLevel="{Binding ZoomLevel}" Center="{Binding Location ,Mode=TwoWay}"
               ContextMenu="{StaticResource commonContextMenu}" CredentialsProvider="{Binding CredentialsProvider}">
                <m:MapItemsControl ItemsSource="{Binding Pins}" ItemTemplate="{StaticResource PinTemplate}"/>
            </m:Map>

            <GridSplitter Grid.Column="3" Width="10" BorderThickness="1"
                  Background="DarkGray" 
                  VerticalAlignment="Stretch" HorizontalAlignment="Center">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding Command_HideSettingPanel}">
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>                
            </GridSplitter>

            <Grid Grid.Column="4" x:Name="panel_setting" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                                
                <StackPanel Grid.Row="0">
                    <Label Content="CredentialsProviderKey:"></Label>
                    <TextBox Text="{Binding CredentialsProviderKey,UpdateSourceTrigger=PropertyChanged}" Width="Auto"></TextBox>
                </StackPanel>

                <StackPanel Grid.Row="1">
                    <Label Content="GPSLogFilePath:"></Label>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Text="{Binding GPSLogFilePath,UpdateSourceTrigger=PropertyChanged}" Width="Auto"></TextBox>
                        <Button Grid.Column="1" Content="...">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding Command_SetLogFilePath}">
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                    </Grid>
                </StackPanel>
                
                <StackPanel Grid.Row="2">
                    <Label Content="MovementThreshold:"></Label>
                    <TextBox Width="Auto" Text="{Binding MovementThreshold,UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource ToolTipErrorStyle}">
                    </TextBox>
                    <!--<TextBox Width="Auto" 
                         Style="{StaticResource ToolTipErrorStyle}">
                        <TextBox.Text>
                            <Binding Path="MovementThreshold" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <vm:RequiredDoubleValidation />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>-->
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</mui:ModernWindow>
